<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"        
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   					   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   					   http://www.springframework.org/schema/util 	   					  
	   					   http://www.springframework.org/schema/util/spring-util-3.0.xsd 
	   					   ">

    <util:properties id="consumerProperties" location="classpath:/consumer.properties"/>
  
    <bean id="consumer"  class="com.hpccsystems.kafka2thor.consumer.Consumer">
	    <constructor-arg name="topic" value="test"/>    
	    <constructor-arg name="properties" ref="consumerProperties"/>	    
	    <property name="messageConverter" ref="messageConverter"/>
    </bean>
    
    <bean id="producer"  class="com.hpccsystems.kafka2thor.producer.Producer">
	    <constructor-arg name="topic" value="test"/>    
	    <constructor-arg name="properties" ref="consumerProperties"/>	    
    </bean>

	<bean id="messageConverter" class="com.hpccsystems.kafka2thor.message.DefaultMessageConverter"/>
	
	
	<bean id="tempRepository" class="com.hpccsystems.etl.tempstorage.MaxSizeMoveToNewLocTempFileRepository">
		<property name="tempFilePath" value="/some/path/tmp"/>
		<property name="maxSizeReachedMovePath" value="/some/path/sftothor"/>		
		<property name="maxSize" value="1024"/>
	</bean>
	
	<bean id="etlDataReceivedListener"  class="com.hpccsystems.etl.event.ETLDataReceivedListener">
		<property name="tempRepository" ref="tempRepository"/>
	</bean>
	
	<bean id="thorLoadTask" class="com.hpccsystems.etl.load.ThorLoadTask">
	 <!-- Configure the thorLoadJob with maybe something like
	 	FileRetrievealStrategy (OldestFile in list of files to load)
	 	FileTransferStrategy (SftpFileTranferStratergy)
	 	ETLInitiateStrategy (ThorETLInitiateStrategy)	   
	  -->
	</bean>
		
	<!-- Job Schedule for processing files to load to Thor -->

	<bean id="thorLoadTaskJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
  		<property name="targetObject" ref="thorLoadTask"/>
  		<property name="targetMethod" value="processFiles"/>
  		<property name="concurrent" value="false"/>
	</bean>
	
 	<!-- Cron Trigger, run every 30 seconds -->
	<bean id="thorLoadTaskJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="thorLoadTaskJob" />
		<property name="cronExpression" value="0/30 * * * * ?" />
 
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean"> 
		<property name="triggers">
			<list>
				<ref bean="thorLoadTaskJobCronTrigger" />
			</list>
		</property>
   </bean>	 
</beans>


